.. OpenCavity documentation master file, created by
   sphinx-quickstart on Sat Nov 22 14:44:25 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to OpenCavity documentation!
====================================

*opencavity* is a python package that allows to analyze the eigenmodes of open optical cavities.

What *opencavity* allows to do:

- Compute both fundamental and higher order eigenmodes of optical resonators.
- Simulate resonators that includes optical elements: apertures, diffractive optical elements (DOE), or any arbitrary phase and amplitude masks placed anywhere inside the resonator.
-  It integrates a physical optics module that allows to compute the output mode, and simulate its propagation outside the resonator. This module can be used for example to design interferometric setups, beam shaping or transforming using DOE.

The package is designed and written with two gaols in mind: usage simplicity and fast learning curve.

.. image:: _static/plot_mode0_E_1D.png
   :width: 2.5in 
   
.. image:: _static/tuto7_plot_tem00_E_2D.png
   :width: 2.5in 
   
.. image:: _static/tuto8_plot2_tem01_I_2D.png
   :width: 2.5in 
    
.. image:: _static/tuto8_plot2_tem10_I_2D.png
   :width: 2.5in  	
   
   Some examples of eigenmodes calculated using *opencavity*
    
    
Contents:

.. toctree::
   :titlesonly:
  
   
   introduction.rst
   before_starting.rst
   tutorial1.rst
   tutorial2.rst
   tutorial3.rst
   tutorial4.rst
   tutorial5.rst
   tutorial6.rst
   tutorial7.rst
   tutorial8.rst
   tutorial9.rst
   
.. automodule:: opencavity.modesolver
   :members:
   
.. automodule:: opencavity.beams
   :members:
   
.. automodule:: opencavity.propagators
   :members:
  
.. automodule:: opencavity.utilsfunc
   :members:




Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
